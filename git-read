

#cooles Readme: https://git-scm.com/book/en/v2/


#Repo auf den Rechner kopieren
git clone
#git Branch wechseln
git checkout <branch>
#Anzeigen in welchem Branch man ist
git status
#alles wieder wegschmeissen was man nach dem pull aus dem Repo gebaut hat
git stash

#die Änderungen ins Repo übertragen
git commit -a + git push

#einen neuen Feature-Branch erstellen und gleichzeitig hineinwechseln 
git checkout -b neuerbranch

#in den master reinmergen
git checkout master
git merge neuerbranch

#das braucht man wenn man dieses Feature separat anfassen und einchecken möchte oder auch zurückrollen


#den Feature-Branch in den Master-Branch reinmergen
#taggen

#git-versions-log anzeigen lassen - da gibts auch ne Revisions-Nummer
git log

#git-diff zu einer bestimmten Revision anzeigen lassen
git show <revision>

#bestimmte Revision wiederherstellen
git checkout <revision>


#richtig mergen:
git checkout master
git pull
git merge stage

#einzelne commits nicht in den master mergen geht laut johl mit git cherry picking - wie es genau geht, muss mal ausprobiert werden
#guter start ist vermutlich https://schacon.github.io/git/git-cherry-pick.html https://www.git-scm.com/docs/git-cherry-pick/1.7.3.3 https://gist.github.com/kylejohnson/8554540e741e8ad29412

#git pinning für versionen? https://opam.ocaml.org/blog/opam-1-2-pin/
